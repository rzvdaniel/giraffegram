// <auto-generated />
using System;
using GG.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GG.Migrations.MsSql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106100915_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GG.Core.Entities.EmailAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("UseSsl")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailAccounts");
                });

            modelBuilder.Entity("GG.Core.Entities.EmailAccountUser", b =>
                {
                    b.Property<Guid>("EmailAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmailAccountId", "UserId");

                    b.HasIndex(new[] { "EmailAccountId" }, "IX_EmailAccountUser_EmailAccountId");

                    b.ToTable("EmailAccountUsers");
                });

            modelBuilder.Entity("GG.Core.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("GG.Core.Entities.EmailTemplateUser", b =>
                {
                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmailTemplateId", "UserId");

                    b.HasIndex(new[] { "EmailTemplateId" }, "IX_EmailTemplateUser_EmailTemplateId");

                    b.ToTable("EmailTemplateUsers");
                });

            modelBuilder.Entity("GG.Core.Entities.EmailAccountUser", b =>
                {
                    b.HasOne("GG.Core.Entities.EmailAccount", null)
                        .WithMany("EmailAccountUsers")
                        .HasForeignKey("EmailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GG.Core.Entities.EmailTemplateUser", b =>
                {
                    b.HasOne("GG.Core.Entities.EmailTemplate", null)
                        .WithMany("EmailTemplateUsers")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GG.Core.Entities.EmailAccount", b =>
                {
                    b.Navigation("EmailAccountUsers");
                });

            modelBuilder.Entity("GG.Core.Entities.EmailTemplate", b =>
                {
                    b.Navigation("EmailTemplateUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
