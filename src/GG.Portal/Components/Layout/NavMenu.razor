@implements IDisposable

@inject NavigationManager NavigationManager

<Menu Mode="MenuMode.Vertical" Theme="MenuTheme.Dark" Selectable="true" DefaultSelectedKeys=@(new[]{"1"})>
    <MenuItem Key="1" Icon="profile" RouterLink="/">
        <b>Dashboard</b>
    </MenuItem>
    <MenuItem Key="2" Icon="play-square" RouterLink="/emails">
        <b>Emails</b>
    </MenuItem>
    <MenuItem Key="3" Icon="user" RouterLink="/emailtemplates/">
        <b>Email Templates</b>
    </MenuItem>
    <MenuItem Key="4" Icon="user" RouterLink="/apikeys/">
        <b>Api Keys</b>
    </MenuItem>
</Menu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

